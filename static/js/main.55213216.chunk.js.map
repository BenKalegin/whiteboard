{"version":3,"sources":["features/CanvasToolbar.tsx","features/PencilButton.tsx","features/PanZoomButton.tsx","features/EraserButton.tsx","features/Curve.tsx","features/Figure.tsx","features/DrawingCanvas.tsx","features/SmoothEnhancement.tsx","features/PredictEnhancement.tsx","features/EnhancementTabs.tsx","helpers/InputTools.ts","helpers/InkDrawingMouseHandler.ts","helpers/DoNothingMouseHandler.ts","features/App.tsx","index.tsx"],"names":["CanvasToolbarSelection","PencilButton","props","active","className","id","aria-label","aria-selected","role","title","onClick","xmlns","viewBox","width","height","fill","color","points","d","PanZoomButton","version","x","y","EraserButton","gradientUnits","x1","y1","x2","y2","gradientTransform","offset","stopColor","stopOpacity","CanvasToolbar","currentTool","Black","selectTool","Red","Green","Blue","Curve","m","model","path","polyLinePoints","map","p","i","pathChar","toFixed","join","stroke","strokeColor","strokeWidth","Figure","curves","c","key","DrawingCanvas","boundRef","useRef","getMousePosition","e","bounds","current","rect","getBoundingClientRect","pageX","left","pageY","top","style","overflow","ref","aria-hidden","onMouseDown","mouseHandler","MouseDown","onMouseMove","MouseMove","onMouseUp","MouseUp","cx","cy","r","figures","f","SmoothEnhancement","Fragment","htmlFor","value","smoothWindow","onChange","smoothWindowChanged","parseInt","target","PredictEnhancement","predictions","slice","s","EnhancementTabs","onTabClick","tabName","tabContent","document","getElementsByClassName","length","setAttribute","tabLinks","replace","getElementById","currentTarget","inkPayload","input_type","requests","language","writing_guide","ink","v","timespan","DefaultInkDrawingModel","CommittedPoints","ProjectedPoints","smoothFactor","SmoothingBuffer","startedAt","tracking","InkDrawingMouseHandler","events","appendToBuffer","buffer","Date","now","shift","getAveragePoint","smoothCount","pt","totalX","totalY","totalTime","count","updateVisiblePoints","extrapolated","push","Started","Changed","_","Finished","DoNothingMouseHandler","App","React","useState","setSmoothWindow","setPredictions","None","toolSelected","setToolSelected","mouseHandlerModel","setMouseHandlerModel","setFigures","figureIdentifier","setFigureIdentifier","useFetch","post","response","penColor","fetchPredictions","a","data","ok","console","error","headers","isPen","tool","newFigure","curveTimes","lastFigure","pop","lastCurve","pointTimes","UpdateRecentCurve","curve","toString","startNewCurve","activePenColor","n","ReactDOM","render","StrictMode","visibility"],"mappings":"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","file":"static/js/main.55213216.chunk.js","sourcesContent":["import React from 'react';\r\nimport PencilButton from './PencilButton';\r\nimport PanZoomButton from './PanZoomButton';\r\nimport EraserButton from './EraserButton';\r\n\r\n\r\nexport interface Props {\r\n    currentTool: CanvasToolbarSelection\r\n    selectTool: (tool: CanvasToolbarSelection) => void\r\n\r\n}\r\n\r\nexport enum CanvasToolbarSelection {\r\n    None, \r\n    PanZoom,\r\n    Black,\r\n    Red,\r\n    Green,\r\n    Blue,\r\n    Eraser\r\n}\r\n\r\nconst CanvasToolbar: React.FC<Props> = (props) => {\r\n    return (\r\n        <div id=\"chrome\" className=\"embedded\">\r\n            <div id=\"penCalloutToastContainer\" className=\"toastContainer\">\r\n                <div id=\"pens\" className=\"chromeContainer embedded\" role=\"tablist\">\r\n                    <PanZoomButton/>\r\n                    <PencilButton color=\"black\" active={props.currentTool === CanvasToolbarSelection.Black} onClick={() => props.selectTool(CanvasToolbarSelection.Black)}/>\r\n                    <PencilButton color=\"red\" active={props.currentTool === CanvasToolbarSelection.Red} onClick={() => props.selectTool(CanvasToolbarSelection.Red)}/>\r\n                    <PencilButton color=\"green\" active={props.currentTool === CanvasToolbarSelection.Green} onClick={() => props.selectTool(CanvasToolbarSelection.Green)}/>\r\n                    <PencilButton color=\"blue\" active={props.currentTool === CanvasToolbarSelection.Blue} onClick={() => props.selectTool(CanvasToolbarSelection.Blue)}/>\r\n                    <EraserButton/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CanvasToolbar;","import React from 'react';\r\n\r\nexport interface Props {\r\n    color: string\r\n    active: boolean\r\n    onClick: () => void\r\n  }\r\n  \r\n\r\nconst PencilButton: React.FC<Props> = (props) => {\r\n    const active =  props.active ? \" activePen\" : \"\";\r\n    return (\r\n<button \r\n    className={\"chrome-Button pen embedded\" + active}\r\n    id=\"red\" \r\n    aria-label=\"Content Creation Toolbar - Ink Red Pen\" \r\n    aria-selected='false' \r\n    role=\"tab\" \r\n    title=\"{props.color} Pen\"\r\n    onClick={props.onClick}>\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -8 96 96\">\r\n        <g>\r\n            <rect className=\"pen-0\" width=\"96\" height=\"96\"></rect>\r\n            <g>\r\n                <g>\r\n                    <polygon fill={props.color} points=\"68.004 96 28 96 29.004 58 67.004 58 68.004 96\"></polygon>\r\n                </g>\r\n                <g>\r\n                    <path fill={props.color} d=\"M55,14C52,4,50,0,47.999,0,46,0,44,4,41,14l.00287,2H54.99713Z\"></path>\r\n                </g>\r\n                <g>\r\n                    <path className=\"pen-1\" d=\"M57.00287,16l-2-2h-14l-2,2s-9.16663,22.33325-10,42L29,60H67.00287V58C66.16949,38.33325,57.00287,16,57.00287,16Z\"></path>\r\n                </g>\r\n            </g>\r\n            <g>\r\n                <polygon className=\"pen-2\" points=\"36 59 36 96 60 96 60 59 36 59\"></polygon>\r\n                <polygon className=\"pen-3\" points=\"41 15 38 59 58 59 55 15 41 15\"></polygon>\r\n            </g>\r\n            <g>\r\n                <polygon points=\"29.004 58 28 96 30.001 96 30.952 60 65.056 60 66.003 96 68.004 96 67.004 58 29.004 58\"></polygon>\r\n                <path d=\"M47.999,2c.06757,0,.346.15382.645.649l.03763.0623.04206.05941c.0536.07572,1.3214,\r\n                    1.92808,4.1846,11.22925H43.09171C45.956,4.69527,47.22008,2.84621,47.27344,2.77076l.04318-.06067.03855-.06371C47.65355,\r\n                    2.15319,47.93148,2,47.999,2m0-2a2.88457,2.88457,0,0,0-2.355,1.61108C45.383,1.97778,43.97986,4.22339,41,14l.00287,\r\n                    2H54.99713L55,14C52.03259,4.264,50.62592,1.99634,50.356,1.61511A2.88666,2.88666,0,0,0,47.999,0Z\"></path>\r\n                <path d=\"M54.17445,16l1.12417,1.12418C56.46608,20.07411,64.22884,40.29125,65.001,\r\n                    58H31.00472c.77218-17.70875,8.53493-37.92589,9.7024-40.87582L41.83129,16H54.17445m.82842-2h-14l-2,2s-9.16663,\r\n                    22.33326-10,42L29,60H67.00287V58c-.83338-19.66674-10-42-10-42l-2-2Z\"></path>\r\n            </g>\r\n        </g>\r\n    </svg>\r\n</button>      \r\n    )\r\n }\r\n\r\n export default PencilButton;","import React from 'react';\r\n\r\nexport interface Props {\r\n}\r\n  \r\n\r\nconst PanZoomButton: React.FC<Props> = (props) => {\r\n    return (\r\n        <button id=\"enablePanzoom\" className=\"chrome-Button\" aria-label=\"Move canvas tool\" title=\"Move canvas tool\">\r\n            <svg className=\"enablePanzoomIcon\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\">\r\n            <path d=\"M4.1,17.1l3.4,3.4L6,22l-6-6l6-6l1.5,1.5l-3.4,3.4h6.6v2.1H4.1z M32,16l-5.9,5.9l-1.5-1.5l3.3-3.3h-6.6v-2.1h6.6l-3.4-3.4\r\n                L26,10L32,16z M11.6,7.4l-1.5-1.5L16,0l6,6l-1.5,1.5l-3.4-3.4v6.6h-2.1V4.1L11.6,7.4z M20.5,24.5L22,26l-6,6l-6-6l1.5-1.5l3.4,3.4\r\n                v-6.6h2.1v6.6L20.5,24.5z\"></path>\r\n            </svg>\r\n        </button>    \r\n    )\r\n }\r\n\r\n export default PanZoomButton;","import React from 'react';\r\n\r\nexport interface Props {\r\n}\r\n  \r\n\r\nconst EraserButton: React.FC<Props> = (props) => {\r\n    return (\r\n        <button className=\"chrome-Button pen embedded\" id=\"erase\" aria-label=\"Content Creation Toolbar - Ink Eraser\" aria-selected=\"false\" role=\"tab\" title=\"Eraser\">\r\n            <svg version=\"1.1\" id=\"Eraser\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 -24 96 96\">\r\n                <rect className=\"eraser-0\" width=\"96\" height=\"96\"/>\r\n                <g>\r\n                    <path className=\"eraser-1\" d=\"M38,0h20c4.4,0,8,3.6,8,8v16H30V8C30,3.6,33.6,0,38,0z\"/>\r\n                    <rect x=\"28\" y=\"58\" className=\"eraser-2\" width=\"40\" height=\"38\"/>\r\n                    <polygon className=\"eraser-3\" points=\"30,22 66,22 68,24 68,60 28,60 28,24 \"/>\r\n                        <linearGradient id=\"barrel_highlight_1_\" gradientUnits=\"userSpaceOnUse\" x1=\"36.1318\" y1=\"-1008.9948\" x2=\"60.0228\" y2=\"-1008.9948\" gradientTransform=\"matrix(1 0 0 -1 0 -931.9948)\">\r\n                            <stop offset=\"0.16\" stopColor=\"#FFFFFF\" stopOpacity=\"0\"/>\r\n                            <stop offset=\"0.5\" stopColor=\"#FFFFFF\" stopOpacity=\"0.7\"/>\r\n                            <stop offset=\"0.84\" stopColor=\"#FFFFFF\" stopOpacity=\"0\"/>\r\n                        </linearGradient>\r\n                    <polygon className=\"eraser-4\" points=\"48.2,58 48,58 36,58 36,96 48,96 48.2,96 60,96 60,58 \t\"/>\r\n                        <linearGradient id=\"metal_highlight_1_\" gradientUnits=\"userSpaceOnUse\" x1=\"38.112\" y1=\"-972.9948\" x2=\"58.2844\" y2=\"-972.9948\" gradientTransform=\"matrix(1 0 0 -1 0 -931.9948)\">\r\n                            <stop offset=\"0.16\" stopColor=\"#FFFFFF\" stopOpacity=\"0\"/>\r\n                            <stop offset=\"0.5\" stopColor=\"#FFFFFF\"/>\r\n                            <stop offset=\"0.84\" stopColor=\"#FFFFFF\" stopOpacity=\"0\"/>\r\n                        </linearGradient>\r\n                    <polygon className=\"eraser-5\" points=\"48.2,22 48,22 36,22 36,60 48,60 48.2,60 60,60 60,22 \t\"/>\r\n                </g>\r\n                <path d=\"M66,22V8c0-4.4-3.6-8-8-8H38c-4.4,0-8,3.6-8,8v14l-2,2v72h2V60h36v36h2V24L66,22z M32,8c0-3.2,2.6-6,5.8-6H38\r\n                    h20c3.2,0,6,2.6,6,5.8V8v14H32V8z M30,58V24.8l0.8-0.8h34.4l0.8,0.8V58H30z\"/>\r\n            </svg>\r\n        </button>   \r\n    )\r\n }\r\n\r\n export default EraserButton;","import React from 'react';\r\nimport {Curve as CurveModel} from '../stores/Models'\r\n\r\nexport interface Props {\r\n    model: CurveModel\r\n}\r\nconst Curve: React.FC<Props> = (props) => {\r\n    const m = props.model\r\n    const pathChar = (i: number)  =>  { return i === 0 ? 'M' : 'L'}\r\n    const path = m.polyLinePoints.map((p, i) => pathChar(i) + p.x.toFixed(1) + \" \" + p.y.toFixed(1)).join(\" \")\r\n    return (\r\n        <path\r\n            id={m.id}\r\n            xmlns = 'http://www.w3.org/2000/svg'\r\n            fill = \"none\"\r\n            stroke = {m.strokeColor}\r\n            strokeWidth = {m.strokeWidth}\r\n            d= {path}\r\n        >\r\n        </path>\r\n    )\r\n}\r\n\r\nexport default Curve","import React from 'react'\r\nimport {Figure as FigureModel} from '../stores/Models'\r\nimport Curve from './Curve'\r\n\r\nexport interface Props {\r\n    model: FigureModel\r\n}\r\nconst Figure: React.FC<Props> = (props) => {\r\n    const m = props.model\r\n\r\n    return (\r\n        <g\r\n            id={m.id}\r\n            x={m.offset.x}\r\n            y={m.offset.y}\r\n        >\r\n            {m.curves.map((c, i) =>\r\n                <Curve model={c} key={i}/>\r\n            )}\r\n        </g>\r\n    )\r\n}\r\n\r\nexport default Figure","import React, { useRef } from 'react'\r\nimport CSS from 'csstype'\r\nimport {Figure as FigureModel, MouseHandler} from '../stores/Models'\r\nimport  Figure  from './Figure'\r\n\r\n\r\nexport interface Props {\r\n    figures: FigureModel[]\r\n    activePenColor: string\r\n    mouseHandler: MouseHandler\r\n}\r\n\r\nconst DrawingCanvas: React.FC<Props> = (props) => {\r\n\r\n    const svgParentStyles: CSS.Properties = {\r\n        overflow: 'hidden'\r\n    };\r\n\r\n    const boundRef = useRef<HTMLElement>(null);\r\n\r\n    const getMousePosition = (e: React.MouseEvent) =>   {\r\n        const bounds = boundRef.current;\r\n        if (!bounds)\r\n            return {x: 0, y: 0};\r\n\r\n        const rect = bounds.getBoundingClientRect();\r\n\r\n        return {\r\n            x: e.pageX - rect.left,\r\n            y: e.pageY - rect.top\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div id=\"svgParent\" className=\"flexAlignCenter\" style={svgParentStyles}>\r\n            <main id=\"svg\"\r\n                  ref={boundRef}\r\n                  aria-label=\"Whiteboard Canvas. Capture your ideas and collaborate with others\"\r\n                  >\r\n                <svg aria-hidden=\"true\"\r\n                     onMouseDown={(e) => props.mouseHandler.MouseDown(getMousePosition(e))}\r\n                     onMouseMove={(e) => props.mouseHandler.MouseMove(getMousePosition(e))}\r\n                     onMouseUp={(e) => props.mouseHandler.MouseUp(getMousePosition(e))}\r\n                     xmlns=\"http://www.w3.org/2000/svg\"\r\n                    //  viewBox=\"0 0 1000 1000\"\r\n                     height=\"1000\"\r\n                     width=\"1000\">\r\n                    <g id=\"canvas-decorators\">\r\n                        <circle cx=\"0\" cy=\"0\" r=\"40\" fill=\"rgba(0,105,191,1)\" />\r\n                        <circle cx=\"0%\" cy=\"100%\" r=\"40\" fill=\"rgba(0,105,191,1)\" />\r\n                        <circle cx=\"100%\" cy=\"0%\" r=\"40\" fill=\"rgba(0,105,191,1)\" />\r\n                        <circle cx=\"100%\" cy=\"100%\" r=\"40\" fill=\"rgba(0,105,191,1)\" />\r\n                    </g>\r\n                    <g id=\"canvas-figures\">\r\n                        {props.figures.map((f, i) =>\r\n                            <Figure key={i} model={f}/>\r\n                        )}\r\n                    </g>\r\n                </svg>\r\n            </main>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DrawingCanvas;\r\n","import React from 'react';\r\n\r\nexport interface Props {\r\n    smoothWindow: number\r\n    smoothWindowChanged: (window: number) => void\r\n}\r\n\r\nconst SmoothEnhancement: React.FC<Props> = (props) => {\r\n\r\nreturn (\r\n    <React.Fragment>\r\n        <h3>Smoothing</h3>\r\n        <p>Simplifies the line by averaging specified number of points.</p>\r\n\r\n    <div id=\"divSmoothingFactor\">\r\n        <label htmlFor=\"cmbBufferSize\">Buffer size:</label>\r\n        <select id=\"cmbBufferSize\" value={props.smoothWindow} onChange={(e) => props.smoothWindowChanged(parseInt(e.target.value))}>\r\n            <option value=\"1\">1 - No smoothing</option>\r\n            <option value=\"4\">4 - Sharp curves</option>\r\n            <option value=\"8\">8 - Smooth curves</option>\r\n            <option value=\"12\">12 - Very smooth curves</option>\r\n            <option value=\"16\">16 - Super smooth curves</option>\r\n            <option value=\"20\">20 - Hyper smooth curves</option>\r\n        </select>\r\n    </div>\r\n    </React.Fragment>\r\n)};\r\n\r\n\r\nexport default SmoothEnhancement;","import React from 'react';\r\n\r\nexport interface Props {\r\n    predictions: string[]\r\n}\r\n\r\nconst PredictEnhancement: React.FC<Props> = (props) => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h3>Predict</h3>\r\n            <p>Drawn any figure  (mug, apple, cat, mosquito, house) in one mouse stroke and check predicted labels below:</p>\r\n            <ul>\r\n                {props.predictions.slice(0, 5).map((s, i) => {\r\n                    return <li key={i}>{s}</li>;\r\n                })}\r\n            </ul>\r\n        </React.Fragment>\r\n    )};\r\n\r\n\r\nexport default PredictEnhancement;","import React from 'react';\r\nimport SmoothEnhancement from './SmoothEnhancement';\r\nimport PredictEnhancement from './PredictEnhancement';\r\n\r\n\r\nexport interface Props {\r\n    smoothWindow: number\r\n    smoothWindowChanged: (window: number) => void\r\n    predictions: string[]\r\n}\r\n\r\nconst EnhancementTabs: React.FC<Props> = (props) => {\r\n\r\n    const onTabClick = (e: React.MouseEvent<HTMLButtonElement>, tabName: string) => {\r\n        const tabContent = document.getElementsByClassName(\"tabcontent\");\r\n        for (let i = 0; i < tabContent.length; i++) {\r\n            const tab = tabContent[i] as HTMLDivElement\r\n            tab.setAttribute(\"style\", \"display=none\");\r\n        }\r\n        const tabLinks = document.getElementsByClassName(\"tablinks\");\r\n        for (let i = 0; i < tabLinks.length; i++) {\r\n          tabLinks[i].className = tabLinks[i].className.replace(\" active\", \"\");\r\n        }\r\n        document.getElementById(tabName)?.setAttribute(\"style\", \"display: block\")\r\n        e.currentTarget.className += \" active\";\r\n    }\r\n\r\n    return (\r\n        <div id=\"footer\">\r\n            <p>There are some tabs below with whiteboard drawing enhancements:</p>\r\n\r\n            <div className=\"tab\">\r\n            <button className=\"tablinks\" onClick={(e) => onTabClick(e, \"simplify\")}>Smooth</button>\r\n            <button className=\"tablinks\" onClick={(e) => onTabClick(e, \"predict\")}>Predict</button>\r\n            </div>\r\n\r\n            <div id=\"simplify\" className=\"tabcontent\">\r\n                <SmoothEnhancement smoothWindow={props.smoothWindow} smoothWindowChanged={props.smoothWindowChanged}/>\r\n            </div>\r\n\r\n            <div id=\"predict\" className=\"tabcontent\">\r\n                <PredictEnhancement predictions={props.predictions} />\r\n            </div>\r\n        </div>        \r\n    );\r\n}\r\n\r\n\r\nexport default EnhancementTabs;","import {TemporalPoint} from \"../stores/Models\";\r\n\r\n\r\nexport interface QuickDrawGuide {\r\n    width: number\r\n    height: number\r\n}\r\n\r\nexport interface QuickDrawRequest {\r\n    language: string\r\n    writing_guide: QuickDrawGuide\r\n    ink: number[][][]\r\n}\r\n\r\nexport interface QuickDrawPayload {\r\n    input_type: number;\r\n    requests: QuickDrawRequest[];\r\n}\r\n\r\n\r\nexport const inkPayload = (width: number, height: number, points: TemporalPoint[]) => {\r\n    return {\r\n        input_type: 0,\r\n        requests: [\r\n            {\r\n                language: \"quickdraw\",\r\n                writing_guide: { width: width, height: height},\r\n                ink: [\r\n                    [\r\n                        points.map(v => v.x),\r\n                        points.map(v => v.y),\r\n                        points.map(v => v.timespan)\r\n                    ]\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}\r\n","import {MouseHandler, Point, TemporalPoint} from \"../stores/Models\";\r\n\r\nexport interface InkDrawingModel {\r\n    SmoothingBuffer: TemporalPoint[]\r\n\r\n    /**\r\n     * Points that are already part of the curve and will not change.\r\n     */\r\n    CommittedPoints: TemporalPoint[]\r\n\r\n    /**\r\n     * Projected points\r\n     */\r\n    ProjectedPoints: TemporalPoint[]\r\n\r\n    /**\r\n     * time when this ink was started to draw\r\n     */\r\n    startedAt: number\r\n    smoothFactor: number\r\n    tracking: boolean\r\n}\r\n\r\ninterface InkDrawingEvents {\r\n    Started(model: InkDrawingModel): void\r\n    Changed(model: InkDrawingModel): void\r\n    Finished(ProjectedPoints: TemporalPoint[]): void\r\n}\r\n\r\nexport const DefaultInkDrawingModel: InkDrawingModel = {\r\n    CommittedPoints: [],\r\n    ProjectedPoints: [],\r\n    smoothFactor: 1,\r\n    SmoothingBuffer: [],\r\n    startedAt: 0,\r\n    tracking: false\r\n}\r\n\r\n\r\n\r\nexport class InkDrawingMouseHandler implements MouseHandler {\r\n\r\n    constructor(private model: InkDrawingModel, private events: InkDrawingEvents) {\r\n    }\r\n\r\n    appendToBuffer = (p: Point) => {\r\n        let buffer = [...this.model.SmoothingBuffer, { ...p, timespan: Date.now() - this.model.startedAt}];\r\n        if (buffer.length > this.model.smoothFactor) {\r\n            buffer.shift();\r\n        }\r\n        this.model.SmoothingBuffer =  buffer;\r\n    }\r\n\r\n    /**\r\n     * Calculate the average point, starting at offset in the smooth window in buffer\r\n     */\r\n    getAveragePoint = (offset: number) : TemporalPoint | null => {\r\n\r\n        const smoothCount = this.model.SmoothingBuffer.length;\r\n        if (smoothCount % 2 === 1 || smoothCount >= this.model.smoothFactor) {\r\n            let totalX = 0;\r\n            let totalY = 0;\r\n            let totalTime = 0;\r\n            let pt, i;\r\n            let count = 0;\r\n            for (i = offset; i < smoothCount; i++) {\r\n                count++;\r\n                pt = this.model.SmoothingBuffer[i];\r\n                totalX += pt.x;\r\n                totalY += pt.y;\r\n                totalTime += pt.timespan\r\n            }\r\n            return {\r\n                x: totalX / count,\r\n                y: totalY / count,\r\n                timespan: totalTime / count\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    updateVisiblePoints = () => {\r\n        let p = this.getAveragePoint(0);\r\n\r\n        if (p) {\r\n            // append to the smoothed part of the path that will not change\r\n            this.model.CommittedPoints = [...this.model.CommittedPoints, p]\r\n\r\n            // Get the last part of the path (close to the current mouse position)\r\n            // This part will change if the mouse moves again\r\n            const extrapolated : TemporalPoint[] = [];\r\n            for (let offset = 2; offset < this.model.SmoothingBuffer.length; offset += 2) {\r\n                p = this.getAveragePoint(offset);\r\n                if (p != null)\r\n                    extrapolated.push(p);\r\n            }\r\n\r\n            this.model.ProjectedPoints = [...this.model.CommittedPoints, ...extrapolated]\r\n        }\r\n    }\r\n\r\n    MouseDown = (p: Point): void => {\r\n        this.model.SmoothingBuffer = []\r\n        this.model.ProjectedPoints = []\r\n        this.model.CommittedPoints = []\r\n        this.model.startedAt = Date.now()\r\n        this.model.tracking = true\r\n        this.appendToBuffer(p);\r\n        this.updateVisiblePoints();\r\n        this.events.Started(this.model)\r\n    };\r\n\r\n    MouseMove = (p: Point): void => {\r\n        if (this.model.tracking) {\r\n            this.appendToBuffer(p);\r\n            this.updateVisiblePoints();\r\n            this.events.Changed(this.model)\r\n        }\r\n    };\r\n\r\n    MouseUp = (_: Point): void => {\r\n        this.model.tracking = false\r\n        this.events.Changed(this.model)\r\n        this.events.Finished(this.model.ProjectedPoints);\r\n    };\r\n\r\n\r\n\r\n}\r\n\r\n","import {MouseHandler, Point} from \"../stores/Models\";\r\n\r\nexport class DoNothingMouseHandler implements MouseHandler {\r\n    MouseDown(p: Point): void {\r\n    }\r\n\r\n    MouseMove(p: Point): void {\r\n    }\r\n\r\n    MouseUp(p: Point): void {\r\n    }\r\n}","import React, {useState} from 'react';\nimport useFetch from 'use-http'\nimport CanvasToolbar, {CanvasToolbarSelection} from './CanvasToolbar';\nimport DrawingCanvas from './DrawingCanvas';\nimport EnhancementTabs from './EnhancementTabs';\nimport '../App.css';\nimport {inkPayload} from '../helpers/InputTools';\nimport {Curve, Figure, TemporalPoint} from \"../stores/Models\";\nimport {DefaultInkDrawingModel, InkDrawingModel, InkDrawingMouseHandler} from \"../helpers/InkDrawingMouseHandler\";\nimport {DoNothingMouseHandler} from \"../helpers/DoNothingMouseHandler\";\n\nfunction App() {\n  const [smoothWindow, setSmoothWindow] = React.useState(1);\n  const [predictions, setPredictions] = React.useState<string[]>([]);\n  const [toolSelected, setToolSelected] = useState(CanvasToolbarSelection.None);\n  const [mouseHandlerModel, setMouseHandlerModel] =  useState<InkDrawingModel>(DefaultInkDrawingModel);\n  const [figures, setFigures] = useState<Figure[]>([]);\n  const [figureIdentifier, setFigureIdentifier] = useState(1)\n\n  const { post, response } = useFetch('https://inputtools.google.com/request?ime=handwriting&app=quickdraw&dbg=1&cs=1&oe=UTF-8')\n\n  const penColor = () => {\n    switch (toolSelected) {\n      case CanvasToolbarSelection.Black: return \"black\"\n      case CanvasToolbarSelection.Blue: return \"blue\"\n      case CanvasToolbarSelection.Green: return \"green\"\n      case CanvasToolbarSelection.Red: return \"red\"      \n  \n      default: return \"black\"\n    }\n  }\n\n  const fetchPredictions = async (points: TemporalPoint[]) => {\n    const data = await post('', inkPayload(1000, 1000, points) )\n    if (!response.ok) {\n      console.error(\"request failed\", response.headers)\n    }else if (data[0] !== \"SUCCESS\") {\n      console.error(\"request failed\", data)\n    }else\n      setPredictions(data[1][0][1])\n  }\n\n  const isPen = (tool: CanvasToolbarSelection) => {\n    switch (tool) {\n      case CanvasToolbarSelection.Black:\n      case CanvasToolbarSelection.Blue:\n      case CanvasToolbarSelection.Green:\n      case CanvasToolbarSelection.Red:\n        return true\n      default:\n        return false\n    }\n  }\n  const selectTool = (tool: CanvasToolbarSelection) => {\n    setToolSelected(tool);\n    if (isPen(tool)) {\n\n        setFigureIdentifier(figureIdentifier + 1)\n\n        const newFigure: Figure  = {\n          id: \"Fig\" + figureIdentifier,\n          offset: {x: 0, y: 0},\n          curves: [],\n          curveTimes: []\n        }\n        setFigures([...figures, newFigure])\n        setMouseHandlerModel({ ...DefaultInkDrawingModel, smoothFactor: smoothWindow})\n    }\n  }\n\n  function UpdateRecentCurve(model: InkDrawingModel) {\n    const lastFigure = figures.pop()!\n    let curves = lastFigure.curves;\n    const lastCurve : Curve = curves.pop()!\n    lastCurve.polyLinePoints = model.ProjectedPoints\n    lastCurve.pointTimes = model.ProjectedPoints.map(p => p.timespan)\n    setFigures([...figures, {...lastFigure, curves: [...curves, lastCurve]}])\n  }\n\n  const startNewCurve = (model: InkDrawingModel) => {\n    const lastFigure = figures.pop()!;\n    const curve : Curve = {\n      id: \"Crv\" + (lastFigure.curves.length + 1).toString(),\n      polyLinePoints: [],\n      pointTimes: [],\n      strokeColor: penColor(),\n      strokeWidth: 3\n    }\n\n    curve.polyLinePoints = model.ProjectedPoints\n    curve.pointTimes = model.ProjectedPoints.map(p => p.timespan)\n    setFigures([...figures, {...lastFigure, curves: [...lastFigure.curves, curve]}])\n  }\n\n  const mouseHandler = isPen(toolSelected) ?  new InkDrawingMouseHandler(mouseHandlerModel, {\n      Changed: (model: InkDrawingModel) => { setMouseHandlerModel(model); UpdateRecentCurve(model)},\n      Finished: (points) => { fetchPredictions(points) },\n      Started: (model: InkDrawingModel) => {startNewCurve(model)}\n  }) : new DoNothingMouseHandler()\n\n  if (toolSelected === CanvasToolbarSelection.None) {\n    selectTool(CanvasToolbarSelection.Black)\n  }\n  return (\n    <div className=\"App\">\n        <CanvasToolbar currentTool={toolSelected} selectTool={(tool) => selectTool(tool)}/>\n        <DrawingCanvas activePenColor={penColor()} mouseHandler={mouseHandler} figures={figures} />\n        <EnhancementTabs smoothWindow={smoothWindow} smoothWindowChanged={(n: number) => setSmoothWindow(n)} predictions={predictions} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './features/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n      <svg className=\"svgDefs\" xmlns=\"http://www.w3.org/2000/svg\" visibility=\"hidden\">\n          <defs>\n              <linearGradient id=\"pen-linear-gradient\" x1=\"36.1146\" y1=\"1057.5\" x2=\"60.0056\" y2=\"1057.5\" gradientTransform=\"translate(0 -980)\" gradientUnits=\"userSpaceOnUse\">\n                  <stop offset=\"0.2\" stopColor=\"#fff\" stopOpacity=\"0\"/>\n                  <stop offset=\"0.2048\" stopColor=\"#fff\" stopOpacity=\"0.00948\"/>\n                  <stop offset=\"0.2972\" stopColor=\"#fff\" stopOpacity=\"0.1775\"/>\n                  <stop offset=\"0.3805\" stopColor=\"#fff\" stopOpacity=\"0.2992\"/>\n                  <stop offset=\"0.4509\" stopColor=\"#fff\" stopOpacity=\"0.3734\"/>\n                  <stop offset=\"0.5\" stopColor=\"#fff\" stopOpacity=\"0.4\"/>\n                  <stop offset=\"0.5576\" stopColor=\"#fff\" stopOpacity=\"0.3835\"/>\n                  <stop offset=\"0.6177\" stopColor=\"#fff\" stopOpacity=\"0.3344\"/>\n                  <stop offset=\"0.679\" stopColor=\"#fff\" stopOpacity=\"0.2526\"/>\n                  <stop offset=\"0.7406\" stopColor=\"#fff\" stopOpacity=\"0.1388\"/>\n                  <stop offset=\"0.8\" stopColor=\"#fff\" stopOpacity=\"0\"/>\n              </linearGradient>\n              <linearGradient id=\"pen-linear-gradient-2\" x1=\"39.75\" y1=\"1017\" x2=\"56.5602\" y2=\"1017\" gradientTransform=\"translate(0 -980)\" gradientUnits=\"userSpaceOnUse\">\n                  <stop offset=\"0.16\" stopColor=\"#fff\" stopOpacity=\"0\"/>\n                  <stop offset=\"0.2179\" stopColor=\"#fff\" stopOpacity=\"0.2236\"/>\n                  <stop offset=\"0.2949\" stopColor=\"#fff\" stopOpacity=\"0.4965\"/>\n                  <stop offset=\"0.3645\" stopColor=\"#fff\" stopOpacity=\"0.7131\"/>\n                  <stop offset=\"0.424\" stopColor=\"#fff\" stopOpacity=\"0.8691\"/>\n                  <stop offset=\"0.4711\" stopColor=\"#fff\" stopOpacity=\"0.9648\"/>\n                  <stop offset=\"0.5\" stopColor=\"#fff\"/>\n                  <stop offset=\"0.5289\" stopColor=\"#fff\" stopOpacity=\"0.9648\"/>\n                  <stop offset=\"0.576\" stopColor=\"#fff\" stopOpacity=\"0.8691\"/>\n                  <stop offset=\"0.6355\" stopColor=\"#fff\" stopOpacity=\"0.7131\"/>\n                  <stop offset=\"0.7051\" stopColor=\"#fff\" stopOpacity=\"0.4965\"/>\n                  <stop offset=\"0.7821\" stopColor=\"#fff\" stopOpacity=\"0.2236\"/>\n                  <stop offset=\"0.84\" stopColor=\"#fff\" stopOpacity=\"0\"/>\n              </linearGradient>\n          </defs>\n      </svg>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}