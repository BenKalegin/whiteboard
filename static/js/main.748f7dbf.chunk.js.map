{"version":3,"sources":["CanvasToolbar.tsx","PencilButton.tsx","PanZoomButton.tsx","EraserButton.tsx","DrawingCanvas.tsx","SmoothEnhancement.tsx","EnhancementTabs.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["CanvasToolbarSelection","PencilButton","props","active","className","id","aria-label","aria-selected","role","title","onClick","xmlns","viewBox","width","height","fill","color","points","d","PanZoomButton","version","x","y","EraserButton","gradientUnits","x1","y1","x2","y2","gradientTransform","offset","stopColor","stopOpacity","CanvasToolbar","useState","None","toolSelected","selectTool","Black","Red","Green","Blue","DrawingCanvas","path","setPath","strPath","setStrPath","buffer","setBuffer","boundRef","useRef","svgContainerRef","appendToBuffer","pt","push","length","smoothWindow","shift","getMousePosition","e","bounds","current","rect","getBoundingClientRect","pageX","left","pageY","top","getAveragePoint","len","i","totalX","totalY","count","style","overflow","ref","transformOrigin","aria-hidden","onMouseDown","document","createElementNS","setAttribute","appendChild","onMouseMove","newPath","tmpPath","updateSvgPath","onMouseUp","patternUnits","stroke","strokeLinejoin","strokeLinecap","strokeWidth","transform","src","type","SmoothEnhancement","htmlFor","value","onChange","smoothWindowChanged","parseInt","target","EnhancementTabs","onTabClick","tabName","tabcontent","getElementsByClassName","tabLinks","replace","getElementById","currentTarget","App","React","setSmoothWindow","n","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","visibility","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.748f7dbf.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PencilButton from './PencilButton';\r\nimport PanZoomButton from './PanZoomButton';\r\nimport EraserButton from './EraserButton';\r\n\r\n\r\nexport interface Props {\r\n}\r\n\r\nenum CanvasToolbarSelection {\r\n    None, \r\n    PanZoom,\r\n    Black,\r\n    Red,\r\n    Green,\r\n    Blue,\r\n    Eraser\r\n}\r\n\r\nconst CanvasToolbar: React.FC<Props> = (props) => {\r\n    const [toolSelected, selectTool] = useState(CanvasToolbarSelection.None);\r\n    return (\r\n        <div id=\"chrome\" className=\"embedded\">\r\n            <div id=\"penCalloutToastContainer\" className=\"toastContainer\">\r\n                <div id=\"pens\" className=\"chromeContainer embedded\" role=\"tablist\">\r\n                    <PanZoomButton></PanZoomButton>\r\n                    <PencilButton color=\"black\" active={toolSelected === CanvasToolbarSelection.Black} onClick={() =>selectTool(CanvasToolbarSelection.Black)}></PencilButton>\r\n                    <PencilButton color=\"red\" active={toolSelected === CanvasToolbarSelection.Red} onClick={() =>selectTool(CanvasToolbarSelection.Red)}></PencilButton>\r\n                    <PencilButton color=\"green\" active={toolSelected === CanvasToolbarSelection.Green} onClick={() =>selectTool(CanvasToolbarSelection.Green)}></PencilButton>\r\n                    <PencilButton color=\"blue\" active={toolSelected === CanvasToolbarSelection.Blue} onClick={() =>selectTool(CanvasToolbarSelection.Blue)}></PencilButton>\r\n                    <EraserButton></EraserButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CanvasToolbar;","import React from 'react';\r\n\r\nexport interface Props {\r\n    color: string\r\n    active: boolean\r\n    onClick: () => void\r\n  }\r\n  \r\n\r\nconst PencilButton: React.FC<Props> = (props) => {\r\n    const active =  props.active ? \" activePen\" : \"\";\r\n    return (\r\n<button \r\n    className={\"chrome-Button pen embedded\" + active}\r\n    id=\"red\" \r\n    aria-label=\"Content Creation Toolbar - Ink Red Pen\" \r\n    aria-selected='false' \r\n    role=\"tab\" \r\n    title=\"{props.color} Pen\"\r\n    onClick={props.onClick}>\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -8 96 96\">\r\n        <g>\r\n            <rect className=\"pen-0\" width=\"96\" height=\"96\"></rect>\r\n            <g>\r\n                <g>\r\n                    <polygon fill={props.color} points=\"68.004 96 28 96 29.004 58 67.004 58 68.004 96\"></polygon>\r\n                </g>\r\n                <g>\r\n                    <path fill={props.color} d=\"M55,14C52,4,50,0,47.999,0,46,0,44,4,41,14l.00287,2H54.99713Z\"></path>\r\n                </g>\r\n                <g>\r\n                    <path className=\"pen-1\" d=\"M57.00287,16l-2-2h-14l-2,2s-9.16663,22.33325-10,42L29,60H67.00287V58C66.16949,38.33325,57.00287,16,57.00287,16Z\"></path>\r\n                </g>\r\n            </g>\r\n            <g>\r\n                <polygon className=\"pen-2\" points=\"36 59 36 96 60 96 60 59 36 59\"></polygon>\r\n                <polygon className=\"pen-3\" points=\"41 15 38 59 58 59 55 15 41 15\"></polygon>\r\n            </g>\r\n            <g>\r\n                <polygon points=\"29.004 58 28 96 30.001 96 30.952 60 65.056 60 66.003 96 68.004 96 67.004 58 29.004 58\"></polygon>\r\n                <path d=\"M47.999,2c.06757,0,.346.15382.645.649l.03763.0623.04206.05941c.0536.07572,1.3214,\r\n                    1.92808,4.1846,11.22925H43.09171C45.956,4.69527,47.22008,2.84621,47.27344,2.77076l.04318-.06067.03855-.06371C47.65355,\r\n                    2.15319,47.93148,2,47.999,2m0-2a2.88457,2.88457,0,0,0-2.355,1.61108C45.383,1.97778,43.97986,4.22339,41,14l.00287,\r\n                    2H54.99713L55,14C52.03259,4.264,50.62592,1.99634,50.356,1.61511A2.88666,2.88666,0,0,0,47.999,0Z\"></path>\r\n                <path d=\"M54.17445,16l1.12417,1.12418C56.46608,20.07411,64.22884,40.29125,65.001,\r\n                    58H31.00472c.77218-17.70875,8.53493-37.92589,9.7024-40.87582L41.83129,16H54.17445m.82842-2h-14l-2,2s-9.16663,\r\n                    22.33326-10,42L29,60H67.00287V58c-.83338-19.66674-10-42-10-42l-2-2Z\"></path>\r\n            </g>\r\n        </g>\r\n    </svg>\r\n</button>      \r\n    )\r\n }\r\n\r\n export default PencilButton;","import React from 'react';\r\n\r\nexport interface Props {\r\n}\r\n  \r\n\r\nconst PanZoomButton: React.FC<Props> = (props) => {\r\n    return (\r\n        <button id=\"enablePanzoom\" className=\"chrome-Button\" aria-label=\"Move canvas tool\" title=\"Move canvas tool\">\r\n            <svg className=\"enablePanzoomIcon\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\">\r\n            <path d=\"M4.1,17.1l3.4,3.4L6,22l-6-6l6-6l1.5,1.5l-3.4,3.4h6.6v2.1H4.1z M32,16l-5.9,5.9l-1.5-1.5l3.3-3.3h-6.6v-2.1h6.6l-3.4-3.4\r\n                L26,10L32,16z M11.6,7.4l-1.5-1.5L16,0l6,6l-1.5,1.5l-3.4-3.4v6.6h-2.1V4.1L11.6,7.4z M20.5,24.5L22,26l-6,6l-6-6l1.5-1.5l3.4,3.4\r\n                v-6.6h2.1v6.6L20.5,24.5z\"></path>\r\n            </svg>\r\n        </button>    \r\n    )\r\n }\r\n\r\n export default PanZoomButton;","import React from 'react';\r\n\r\nexport interface Props {\r\n}\r\n  \r\n\r\nconst EraserButton: React.FC<Props> = (props) => {\r\n    return (\r\n        <button className=\"chrome-Button pen embedded\" id=\"erase\" aria-label=\"Content Creation Toolbar - Ink Eraser\" aria-selected=\"false\" role=\"tab\" title=\"Eraser\">\r\n            <svg version=\"1.1\" id=\"Eraser\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 -24 96 96\">\r\n                <rect className=\"eraser-0\" width=\"96\" height=\"96\"/>\r\n                <g>\r\n                    <path className=\"eraser-1\" d=\"M38,0h20c4.4,0,8,3.6,8,8v16H30V8C30,3.6,33.6,0,38,0z\"/>\r\n                    <rect x=\"28\" y=\"58\" className=\"eraser-2\" width=\"40\" height=\"38\"/>\r\n                    <polygon className=\"eraser-3\" points=\"30,22 66,22 68,24 68,60 28,60 28,24 \"/>\r\n                        <linearGradient id=\"barrel_highlight_1_\" gradientUnits=\"userSpaceOnUse\" x1=\"36.1318\" y1=\"-1008.9948\" x2=\"60.0228\" y2=\"-1008.9948\" gradientTransform=\"matrix(1 0 0 -1 0 -931.9948)\">\r\n                            <stop offset=\"0.16\" stopColor=\"#FFFFFF\" stopOpacity=\"0\"/>\r\n                            <stop offset=\"0.5\" stopColor=\"#FFFFFF\" stopOpacity=\"0.7\"/>\r\n                            <stop offset=\"0.84\" stopColor=\"#FFFFFF\" stopOpacity=\"0\"/>\r\n                        </linearGradient>\r\n                    <polygon className=\"eraser-4\" points=\"48.2,58 48,58 36,58 36,96 48,96 48.2,96 60,96 60,58 \t\"/>\r\n                        <linearGradient id=\"metal_highlight_1_\" gradientUnits=\"userSpaceOnUse\" x1=\"38.112\" y1=\"-972.9948\" x2=\"58.2844\" y2=\"-972.9948\" gradientTransform=\"matrix(1 0 0 -1 0 -931.9948)\">\r\n                            <stop offset=\"0.16\" stopColor=\"#FFFFFF\" stopOpacity=\"0\"/>\r\n                            <stop offset=\"0.5\" stopColor=\"#FFFFFF\"/>\r\n                            <stop offset=\"0.84\" stopColor=\"#FFFFFF\" stopOpacity=\"0\"/>\r\n                        </linearGradient>\r\n                    <polygon className=\"eraser-5\" points=\"48.2,22 48,22 36,22 36,60 48,60 48.2,60 60,60 60,22 \t\"/>\r\n                </g>\r\n                <path d=\"M66,22V8c0-4.4-3.6-8-8-8H38c-4.4,0-8,3.6-8,8v14l-2,2v72h2V60h36v36h2V24L66,22z M32,8c0-3.2,2.6-6,5.8-6H38\r\n                    h20c3.2,0,6,2.6,6,5.8V8v14H32V8z M30,58V24.8l0.8-0.8h34.4l0.8,0.8V58H30z\"/>\r\n            </svg>\r\n        </button>   \r\n    )\r\n }\r\n\r\n export default EraserButton;","import React, { useState, useRef } from 'react';\r\nimport CSS from 'csstype';\r\n\r\nexport interface Props {\r\n    smoothWindow: number\r\n}\r\n\r\nconst DrawingCanvas: React.FC<Props> = (props) => {\r\n\r\n    const svgParentStyles: CSS.Properties = {\r\n        overflow: 'hidden'\r\n    };\r\n\r\n    const mainStyles: CSS.Properties = {\r\n        // transform: 'matrix(0.4637, 0, 0, 0.4637, 49.4283, -41.1269)',\r\n        transformOrigin: '50% 50%'\r\n    };\r\n\r\n    const strokeWidth = \"3\";\r\n\r\n    const [path, setPath] = useState<SVGPathElement | null>(null);\r\n    const [strPath, setStrPath] = useState<string>(\"null\");\r\n    // Contains the last positions of the mouse cursor\r\n    const [buffer, setBuffer] = useState<{ x: number; y: number }[]>([]);\r\n\r\n\r\n    const boundRef = useRef<HTMLElement>(null);\r\n    let svgContainerRef = useRef<SVGSVGElement>(null);\r\n\r\n    const appendToBuffer = function (pt: { x: number; y: number }) {\r\n        buffer.push(pt);\r\n        while (buffer.length > props.smoothWindow) {\r\n            buffer.shift();\r\n        }\r\n        setBuffer(buffer)\r\n    };\r\n\r\n    const getMousePosition = (e: React.MouseEvent) =>   {\r\n        const bounds = boundRef.current;\r\n        if (!bounds)\r\n            return {x: 0, y: 0};\r\n\r\n        const rect = bounds.getBoundingClientRect();\r\n\r\n        return {\r\n            x: e.pageX - rect.left,\r\n            y: e.pageY - rect.top\r\n        }\r\n    };\r\n\r\n    const mouseDownHandler = (e: React.MouseEvent) => {\r\n\r\n        const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n        path.setAttribute(\"fill\", \"none\");\r\n        path.setAttribute(\"stroke\", \"#000\");\r\n        path.setAttribute(\"stroke-width\", strokeWidth);\r\n        setPath(path);\r\n        setBuffer([]);\r\n        let pt = getMousePosition(e);\r\n        appendToBuffer(pt);\r\n        const strPath = \"M\" + pt.x + \" \" + pt.y\r\n        setStrPath(strPath)\r\n        path.setAttribute(\"d\", strPath)\r\n        svgContainerRef.current?.appendChild(path)\r\n    };\r\n\r\n    // Calculate the average point, starting at offset in the buffer\r\n    const getAveragePoint = (offset: number) => {\r\n        const len = buffer.length;\r\n        if (len % 2 === 1 || len >= props.smoothWindow) {\r\n            let totalX = 0;\r\n            let totalY = 0;\r\n            let pt, i;\r\n            let count = 0;\r\n            for (i = offset; i < len; i++) {\r\n                count++;\r\n                pt = buffer[i];\r\n                totalX += pt.x;\r\n                totalY += pt.y;\r\n            }\r\n            return {\r\n                x: totalX / count,\r\n                y: totalY / count\r\n            }\r\n        }\r\n        return {x: 0, y: 0};\r\n    };\r\n\r\n    const updateSvgPath = () => {\r\n        let pt = getAveragePoint(0);\r\n\r\n        if (pt) {\r\n            // Get the smoothed part of the path that will not change\r\n            const newPath = strPath + \" L\" + pt.x + \" \" + pt.y;\r\n            setStrPath(newPath)\r\n\r\n            // Get the last part of the path (close to the current mouse position)\r\n            // This part will change if the mouse moves again\r\n            let tmpPath = \"\";\r\n            for (let offset = 2; offset < buffer.length; offset += 2) {\r\n                pt = getAveragePoint(offset);\r\n                tmpPath += \" L\" + pt.x + \" \" + pt.y;\r\n            }\r\n\r\n            // Set the complete current path coordinates\r\n            path?.setAttribute(\"d\", newPath + tmpPath);\r\n        }\r\n    };\r\n    const mouseMoveHandler = (e: React.MouseEvent) => {\r\n        if (path) {\r\n            appendToBuffer(getMousePosition(e));\r\n            updateSvgPath();\r\n        }\r\n    };\r\n\r\n    const mouseUpHandler = (e: React.MouseEvent) => {\r\n        if (path) {\r\n            setPath(null)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div id=\"svgParent\" className=\"flexAlignCenter\" style={svgParentStyles}>\r\n            <main id=\"svg\"\r\n                  ref={boundRef}\r\n                  aria-label=\"Whiteboard Canvas. Capture your ideas and collaborate with others\"\r\n                  style={mainStyles}>\r\n                <div id=\"ucParent\" className=\"flexAlignCenter\"/>\r\n                <svg aria-hidden=\"true\"\r\n                     onMouseDown={mouseDownHandler} onMouseMove={mouseMoveHandler} onMouseUp={mouseUpHandler}\r\n                     ref={svgContainerRef}\r\n                     xmlns=\"http://www.w3.org/2000/svg\"\r\n                    //  viewBox=\"0 0 1000 1000\"\r\n                     height=\"1000\"\r\n                     width=\"1000\">\r\n                    <g>\r\n                        <g>wB\r\n                            <defs>\r\n                                <pattern patternUnits=\"userSpaceOnUse\" height=\"48\" width=\"48\" y=\"0\" x=\"0\" id=\"Neutral\">\r\n                                    <g>\r\n                                        <rect fill=\"#FFFFFF\" stroke=\"none\" height=\"48\" width=\"48\" y=\"-24\" x=\"-24\"/>\r\n                                    </g>\r\n                                </pattern>\r\n                            </defs>\r\n                            <rect fill=\"url(#Neutral)\" stroke=\"none\" height=\"3186.689208984375\"\r\n                                  width=\"3480.512939453125\" y=\"-1593.3446044921875\" x=\"-1740.2564697265625\"/>\r\n                        </g>\r\n                        <g>\r\n                            <g>\r\n                                <g>\r\n                                    <polyline id=\"1574a03e0b06e900\"\r\n                                              points=\"0,0 100,100 100, 0\"\r\n                                              fill=\"none\" strokeLinejoin=\"round\" strokeLinecap=\"round\"\r\n                                              strokeWidth=\"512\" stroke=\"rgba(0,105,191,1)\"/>\r\n                                </g>\r\n                            </g>\r\n                        </g>\r\n                    </g>\r\n                    <g>\r\n                        <g transform=\"matrix(1, 0, 0, 1, 0, 0)\">\r\n                            <rect height=\"1\" width=\"1\" y=\"0\" x=\"0\" className=\"anchor\"/>\r\n                        </g>\r\n                        <g transform=\"matrix(1, 0, 0, 1, 360, 0)\">\r\n                            <rect height=\"1\" width=\"1\" y=\"0\" x=\"0\" className=\"anchor\"/>\r\n                        </g>\r\n                    </g>\r\n                </svg>\r\n                <script src=\"/wasm/InkCore.js\" type=\"text/javascript\"/>\r\n            </main>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DrawingCanvas;\r\n","import React, { useState, useRef } from 'react';\r\n\r\nexport interface Props {\r\n    smoothWindow: number\r\n    smoothWindowChanged: (window: number) => void\r\n}\r\n\r\nconst SmoothEnhancement: React.FC<Props> = (props) => {\r\n\r\nreturn (\r\n    <div>\r\n        <h3>Simplify</h3>\r\n        <p>Simplifies the line by averaging specified number of points.</p>\r\n\r\n    <div id=\"divSmoothingFactor\">\r\n        <label htmlFor=\"cmbBufferSize\">Buffer size:</label>\r\n        <select id=\"cmbBufferSize\" value={props.smoothWindow} onChange={(e) => props.smoothWindowChanged(parseInt(e.target.value))}>\r\n            <option value=\"1\">1 - No smoothing</option>\r\n            <option value=\"4\">4 - Sharp curves</option>\r\n            <option value=\"8\">8 - Smooth curves</option>\r\n            <option value=\"12\">12 - Very smooth curves</option>\r\n            <option value=\"16\">16 - Super smooth curves</option>\r\n            <option value=\"20\">20 - Hyper smooth curves</option>\r\n        </select>\r\n    </div>\r\n    </div>\r\n)};\r\n\r\n\r\nexport default SmoothEnhancement;","import React, { useState, useRef } from 'react';\r\nimport CSS from 'csstype';\r\nimport SmoothEnhancement from './SmoothEnhancement';\r\n\r\nexport interface Props {\r\n    smoothWindow: number\r\n    smoothWindowChanged: (window: number) => void    \r\n}\r\n\r\nconst EnhancementTabs: React.FC<Props> = (props) => {\r\n\r\n    const onTabClick = (e: React.MouseEvent<HTMLButtonElement>, tabName: string) => {\r\n        const tabcontent = document.getElementsByClassName(\"tabcontent\");\r\n        for (let i = 0; i < tabcontent.length; i++) {\r\n            const tab = tabcontent[i] as HTMLDivElement\r\n            tab.setAttribute(\"style\", \"display=none\");\r\n        }\r\n        const tabLinks = document.getElementsByClassName(\"tablinks\");\r\n        for (let i = 0; i < tabLinks.length; i++) {\r\n          tabLinks[i].className = tabLinks[i].className.replace(\" active\", \"\");\r\n        }\r\n        document.getElementById(tabName)?.setAttribute(\"style\", \"display: block\")\r\n        e.currentTarget.className += \" active\";\r\n    }\r\n\r\n    return (\r\n        <div id=\"footer\">\r\n            <p>There are some tabs below with whiteboard drawing enhancements:</p>\r\n\r\n            <div className=\"tab\">\r\n            <button className=\"tablinks\" onClick={(e) => onTabClick(e, \"simplify\")}>Simplify line</button>\r\n            <button className=\"tablinks\" onClick={(e) => onTabClick(e, \"predict\")}>Predict Figure</button>\r\n            </div>\r\n\r\n            <div id=\"simplify\" className=\"tabcontent\">\r\n                <SmoothEnhancement smoothWindow={props.smoothWindow} smoothWindowChanged={props.smoothWindowChanged}/>\r\n            </div>\r\n\r\n            <div id=\"predict\" className=\"tabcontent\">\r\n            <h3>Predict</h3>\r\n            <p>Predict what was being drawing and suggest ready made picture. </p> \r\n            </div>\r\n        </div>        \r\n    );\r\n}\r\n\r\n\r\nexport default EnhancementTabs;","import React from 'react';\nimport CanvasToolbar from './CanvasToolbar';\nimport DrawingCanvas from './DrawingCanvas';\nimport EnhancementTabs from './EnhancementTabs';\nimport './App.css';\n\nfunction App() {\n  const [smoothWindow, setSmoothWindow] = React.useState(1);\n\n\n  return (\n    <div className=\"App\">\n        <CanvasToolbar/>\n        <DrawingCanvas smoothWindow={smoothWindow}/>\n        <EnhancementTabs smoothWindow={smoothWindow} smoothWindowChanged={(n: number) => setSmoothWindow(n)}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n      <svg className=\"svgDefs\" xmlns=\"http://www.w3.org/2000/svg\" visibility=\"hidden\">\n          <defs>\n              <linearGradient id=\"pen-linear-gradient\" x1=\"36.1146\" y1=\"1057.5\" x2=\"60.0056\" y2=\"1057.5\" gradientTransform=\"translate(0 -980)\" gradientUnits=\"userSpaceOnUse\">\n                  <stop offset=\"0.2\" stopColor=\"#fff\" stopOpacity=\"0\"/>\n                  <stop offset=\"0.2048\" stopColor=\"#fff\" stopOpacity=\"0.00948\"/>\n                  <stop offset=\"0.2972\" stopColor=\"#fff\" stopOpacity=\"0.1775\"/>\n                  <stop offset=\"0.3805\" stopColor=\"#fff\" stopOpacity=\"0.2992\"/>\n                  <stop offset=\"0.4509\" stopColor=\"#fff\" stopOpacity=\"0.3734\"/>\n                  <stop offset=\"0.5\" stopColor=\"#fff\" stopOpacity=\"0.4\"/>\n                  <stop offset=\"0.5576\" stopColor=\"#fff\" stopOpacity=\"0.3835\"/>\n                  <stop offset=\"0.6177\" stopColor=\"#fff\" stopOpacity=\"0.3344\"/>\n                  <stop offset=\"0.679\" stopColor=\"#fff\" stopOpacity=\"0.2526\"/>\n                  <stop offset=\"0.7406\" stopColor=\"#fff\" stopOpacity=\"0.1388\"/>\n                  <stop offset=\"0.8\" stopColor=\"#fff\" stopOpacity=\"0\"/>\n              </linearGradient>\n              <linearGradient id=\"pen-linear-gradient-2\" x1=\"39.75\" y1=\"1017\" x2=\"56.5602\" y2=\"1017\" gradientTransform=\"translate(0 -980)\" gradientUnits=\"userSpaceOnUse\">\n                  <stop offset=\"0.16\" stopColor=\"#fff\" stopOpacity=\"0\"/>\n                  <stop offset=\"0.2179\" stopColor=\"#fff\" stopOpacity=\"0.2236\"/>\n                  <stop offset=\"0.2949\" stopColor=\"#fff\" stopOpacity=\"0.4965\"/>\n                  <stop offset=\"0.3645\" stopColor=\"#fff\" stopOpacity=\"0.7131\"/>\n                  <stop offset=\"0.424\" stopColor=\"#fff\" stopOpacity=\"0.8691\"/>\n                  <stop offset=\"0.4711\" stopColor=\"#fff\" stopOpacity=\"0.9648\"/>\n                  <stop offset=\"0.5\" stopColor=\"#fff\"/>\n                  <stop offset=\"0.5289\" stopColor=\"#fff\" stopOpacity=\"0.9648\"/>\n                  <stop offset=\"0.576\" stopColor=\"#fff\" stopOpacity=\"0.8691\"/>\n                  <stop offset=\"0.6355\" stopColor=\"#fff\" stopOpacity=\"0.7131\"/>\n                  <stop offset=\"0.7051\" stopColor=\"#fff\" stopOpacity=\"0.4965\"/>\n                  <stop offset=\"0.7821\" stopColor=\"#fff\" stopOpacity=\"0.2236\"/>\n                  <stop offset=\"0.84\" stopColor=\"#fff\" stopOpacity=\"0\"/>\n              </linearGradient>\n          </defs>\n      </svg>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}